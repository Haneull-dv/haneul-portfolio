services:

  postgres:
    image: postgres:15
    container_name: db
    restart: always
    env_file:
      - ./postgres/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  gateway:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./gateway:/app
    env_file:
      - ./gateway/.env
    depends_on:
      - postgres
    networks:
      - app-network

  stockprice:
    container_name: stockprice
    build:
      context: ./weekly_stockprice
      dockerfile: Dockerfile
    ports:
      - "9006:9006"
    volumes:
      - ./weekly_stockprice:/app
    env_file:
      - ./weekly_stockprice/.env
    environment:
      - ENV=${ENV}
    depends_on:
      - postgres
    networks:
      - app-network

  stocktrend:
    container_name: stock
    build:
      context: ./conanai_stocktrend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./conanai_stocktrend:/app
    env_file:
      - ./conanai_stocktrend/.env
    depends_on:
      - postgres
    networks:
      - app-network

  irsummary:
    container_name: summary
    build:
      context: ./conanai_irsummary
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    volumes:
      - ./conanai_irsummary:/app
    env_file:
      - ./conanai_irsummary/.env
    depends_on:
      - postgres
    networks:
      - app-network

  dsdgen:
    container_name: gen
    build:
      context: ./conanai_dsdgen
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    volumes:
      - ./conanai_dsdgen:/app
      - ./dart_documents:/app/app/dart_documents
    env_file:
      - ./conanai_dsdgen/.env
    depends_on:
      - postgres
    networks:
      - app-network

  dsdcheck:
    container_name: check
    build:
      context: ./conanai_dsdcheck
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    volumes:
      - ./conanai_dsdcheck:/app
    environment:
      - DART_API_KEY=dummy_api_key
    env_file:
      - ./conanai_dsdcheck/.env
    depends_on:
      - postgres
    networks:
      - app-network

  n8n:
    container_name: n8n
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "5678:5678"
    volumes:
      - ./n8n_data:/home/node/.n8n
      - ./n8n_data:/data-input
    env_file:
      - ./n8n_data/.env
    depends_on:
      - gateway
    networks:
      - app-network

  newsclassifier:
    container_name: newsclassifier
    build:
      context: ./slm_newsclassifier_inference
      dockerfile: Dockerfile
    ports:
      - "8087:8087"
    volumes:
      - ./slm_newsclassifier_inference:/app
      - ./slm_newsclassifier_training:/app/slm_newsclassifier_training
    env_file:
      - ./slm_newsclassifier_inference/.env
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - HUGGINGFACE_TOKEN=${HUGGINGFACE_TOKEN}
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - app-network

  summarizer:
    container_name: summarizer
    build:
      context: ./slm_summarizer_inference
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    volumes:
      - ./slm_summarizer_inference:/app
      - ./slm_summarizer_training:/app/slm_summarizer_training
    env_file:
      - ./slm_summarizer_inference/.env
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - HUGGINGFACE_HUB_TOKEN=${HUGGINGFACE_TOKEN}
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - app-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    env_file:
      - ./frontend/.env
    networks:
      - app-network

  weekly_db:
    container_name: weekly_data
    build:
      context: .
      dockerfile: ./weekly_db/Dockerfile
    ports:
      - "8091:8091"
    volumes:
      - .:/app
    env_file:
      - ./weekly_db/.env
    depends_on:
      - postgres
    networks:
      - app-network

  disclosure:
    container_name: disclosure
    build:
      context: ./weekly_disclosure
      dockerfile: ./weekly_disclosure/Dockerfile
    ports:
      - "8090:8090"
    volumes:
      - ./weekly_disclosure:/app
    env_file:
      - ./weekly_disclosure/.env
    environment:
      - ENV=${ENV}
    depends_on:
      - postgres
    networks:
      - app-network

  issue:
    container_name: issue
    build:
      context: .
      dockerfile: ./weekly_issue/Dockerfile
    ports:
      - "8089:8089"
    volumes:
      - .:/app
    environment:
      - RUNNING_IN_DOCKER=true
    env_file:
      - ./weekly_issue/.env
    depends_on:
      - postgres
    networks:
      - app-network

  kpi_compare:
    container_name: kpi_compare
    build:
      context: .
      dockerfile: ./kpi_compare/Dockerfile
    ports:
      - "9007:9007"
    volumes:
      - .:/app
    env_file:
      - ./kpi_compare/.env
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
